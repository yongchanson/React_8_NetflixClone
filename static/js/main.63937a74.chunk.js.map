{"version":3,"sources":["Components/flag.png","Components/Header.tsx","api.ts","utils.ts","Components/noPoster.png","Components/Detail.tsx","Routes/Home.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","flag","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","start","pathLength","fill","end","navVariants","top","backgroundColor","scroll","Header","homeMatch","useRouteMatch","tvMatch","useState","searchOpen","setSearchOpen","inputAnimation","useAnimation","scrollY","useViewportScroll","history","useHistory","useForm","register","handleSubmit","navAnimation","useEffect","onChange","get","variants","animate","initial","whileHover","xmlns","width","height","viewBox","path","default","duration","delay","d","to","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","type","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getMovies","fetch","then","response","json","topMovies","upcomingMovie","getTv","getPopularTv","getTopRatedTv","makeImagePath","id","format","Container","BigImage","Loader","BigHeader","BigTitle","h3","BigRate","BigOverView","p","BigRunTime","span","BigGenres","Genre","Detail","bgPhoto","useParams","movieId","tvId","useQuery","getMovieDetail","getTvDetail","keepPreviousData","movieLoading","isLoading","time","runtime","hour","Math","floor","minutes","Helmet","title","name","style","backgroundImage","backdrop_path","noPoster","vote_average","overview","number_of_seasons","genres","map","genre","Wrapper","Banner","Title","h2","Overview","Slider","Row","Box","Info","black","Overlay","BigMovie","rowVariants","hidden","window","outerWidth","visible","exit","boxVariants","scale","hover","y","duaration","infoVariants","opacity","ArrowBtn","UpcomingSlide","TopSlide","SliderTitle","Home","bigMovieMatch","nowLoading","topMovieData","topMovieLoading","upcomingData","upcomingLoading","index","setIndex","topIndex","setTopIndex","upIndex","setUpIndex","leaving","setLeaving","toggleLeaving","onBoxClicked","params","results","find","movie","AnimatePresence","onExitComplete","slice","totalMovies","length","maxIndex","String","BoxContainer","location","useLocation","URLSearchParams","search","searchAll","mediaType","searchId","media_type","poster_path","Tv","todayLoading","popTvData","popTvLoading","topTvData","topTvLoading","todayIndex","setTodayIndex","popIndex","setPopIndex","tv","totalTv","App","exact","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.63937a74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/flag.82a07024.png\";","import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport flag from '../Components/flag.png';\r\n\r\nconst Nav = styled(motion.nav)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  font-size: 14px;\r\n  padding: 20px 60px;\r\n  color: white;\r\n`;\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled(motion.svg)`\r\n  margin-right: 50px;\r\n  width: 95px;\r\n  height: 25px;\r\n  fill: ${(props) => props.theme.red};\r\n  path {\r\n    stroke-width: 6px;\r\n    stroke: white;\r\n  }\r\n`;\r\n\r\nconst Items = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  margin-right: 20px;\r\n  color: ${(props) => props.theme.white.darker};\r\n  transition: color 0.3s ease-in-out;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  &:hover {\r\n    color: ${(props) => props.theme.white.lighter};\r\n  }\r\n`;\r\n\r\nconst Search = styled.form`\r\n  color: white;\r\n  svg {\r\n    height: 25px;\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\n// const Circle = styled.span`\r\nconst Circle = styled(motion.div)`\r\n  width: 5px;\r\n  height: 5px;\r\n  border-radius: 5px;\r\n  bottom: -5px;\r\n  //가운데 넣기\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  //\r\n  /* background-color: ${(props) => props.theme.red}; */\r\n  \r\n  /* background-image: url(${flag}); */\r\n`;\r\n\r\nconst Input = styled(motion.input)`\r\n  transform-origin: right center;\r\n  position: absolute;\r\n  right: 0px;\r\n  padding: 5px 10px;\r\n  padding-left: 40px;\r\n  z-index: -1;\r\n  color: white;\r\n  font-size: 16px;\r\n  background-color: transparent;\r\n  border: 1px solid ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst logoVariants = {\r\n    normal: {\r\n      fillOpacity: 1,\r\n    },\r\n    active: {\r\n      fillOpacity: [0, 1, 0],\r\n      transition: {\r\n        repeat: Infinity,//무한반복\r\n      },\r\n    },\r\n  };\r\n\r\n  const svg = {\r\n    start: { pathLength: 0, fill: \"rgba(255, 255, 255, 0)\" },\r\n    end: {\r\n      fill: \"#fc0202\",\r\n      pathLength: 1,\r\n    },\r\n  };\r\n\r\nconst navVariants = {\r\n  top: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n  },\r\n  scroll: {\r\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\r\n  },\r\n};\r\n\r\ninterface IForm {\r\n  keyword: string;\r\n}\r\n\r\nfunction Header() {\r\n  const homeMatch = useRouteMatch(\"/\");//메뉴아래 원이동을 위한 작업\r\n  const tvMatch = useRouteMatch(\"/tv\");\r\n//   console.log(homeMatch, tvMatch);//무슨 라우터에 있는지 확인\r\n  const [searchOpen, setSearchOpen] = useState(false);\r\n  const inputAnimation = useAnimation();\r\n  const { scrollY } = useViewportScroll();//스크롤 값\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm<IForm>();\r\n  const onValid = (data: IForm) => {\r\n    history.push(`/search?keyword=${data.keyword}`);\r\n  };\r\n  const navAnimation = useAnimation();\r\n  const toggleSearch = () => {\r\n    if (searchOpen) {\r\n      inputAnimation.start({\r\n        scaleX: 0,\r\n      });\r\n    } else {\r\n      inputAnimation.start({ scaleX: 1 });\r\n    }\r\n    setSearchOpen((prev) => !prev);\r\n  };\r\n  useEffect(() => {\r\n    scrollY.onChange(() => {\r\n      if (scrollY.get() > 80) {\r\n        navAnimation.start(\"scroll\");\r\n      } else {\r\n        navAnimation.start(\"top\");\r\n      }\r\n    });\r\n  }, [scrollY, navAnimation]);  \r\n  return (\r\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\r\n      <Col>\r\n        <Logo\r\n          variants={logoVariants}\r\n          initial=\"normal\"\r\n          whileHover=\"active\"\r\n          animate=\"normal\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"1024\"\r\n          height=\"276.742\"\r\n          viewBox=\"0 0 1024 276.742\"\r\n        >\r\n          <motion.path\r\n            variants={svg}\r\n            initial=\"start\"\r\n            animate=\"end\"\r\n            transition={{\r\n              default: { duration: 5 },\r\n              fill: { duration: 1, delay: 3 },\r\n            }}\r\n          d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\"\r\n          ></motion.path>\r\n        </Logo>\r\n        <Items>\r\n          <Item>\r\n            <Link to=\"/\">\r\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\"> 🚩</Circle>}\r\n            </Link>\r\n          </Item>\r\n          <Item>\r\n            <Link to=\"/tv\">\r\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\"> 🚩</Circle>}\r\n            </Link>\r\n          </Item>\r\n        </Items>\r\n      </Col>\r\n      <Col>\r\n        <Search onSubmit={handleSubmit(onValid)}>\r\n            <motion.svg\r\n                onClick={toggleSearch}\r\n                animate={{ x: searchOpen ? -210 : 0 }}\r\n                transition={{ type: \"linear\" }}//부드럽게\r\n                fill=\"currentColor\"\r\n                viewBox=\"0 0 20 20\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </motion.svg>\r\n\r\n          <Input\r\n            {...register(\"keyword\", { required: true, minLength: 2 })}\r\n            animate={inputAnimation}\r\n            initial={{ scaleX: 0 }}\r\n            transition={{ type: \"linear\" }}\r\n            // animate={{ scaleX: searchOpen ? 1 : 0 }}\r\n            placeholder=\"Search for movie or tv show...\"\r\n          />\r\n\r\n        </Search>\r\n      </Col>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default Header;","import { TriggerConfig } from \"react-hook-form\";\r\n\r\nconst API_KEY = '1cf50e6248dc270629e802686245c2c8&language=ko-KR';\r\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\r\n\r\ninterface IMovie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  title: string;\r\n  overview: string;\r\n  name?: string;\r\n  media_type: string;\r\n  genres: IGenres[];\r\n  number_of_seasons: string;\r\n}\r\ninterface IGenres {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport interface IGetMoviesResult {\r\n  dates: {\r\n    maximum: string;\r\n    minimum: string;\r\n  };\r\n  page: number;\r\n  results: IMovie[];\r\n  total_pages: number;\r\n  total_results: number;\r\n  // genres: IGenres[];\r\n}\r\ninterface IGenres {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport function getMovies() {\r\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function topMovies() {\r\n  return fetch(\r\n    `${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`\r\n  ).then((response) => response.json());\r\n}\r\n \r\nexport function upcomingMovie() {\r\n  return fetch(\r\n    `${BASE_PATH}/movie/upcoming?api_key=${API_KEY}&page=2`\r\n    //page가 없거나 1인경우 : 상영중인 영화의 포스터가 이동하는 현상있음\r\n  ).then((response) => response.json());\r\n}\r\n//search\r\nexport interface ISearchResult {\r\n  page: number;\r\n  results: IMovie[];\r\n}\r\nexport function searchAll(keyword: string | null) {\r\n  return fetch(\r\n    `${BASE_PATH}/search/multi?api_key=${API_KEY}&query=${keyword}`\r\n  ).then((response) => response.json());\r\n}\r\n//tv\r\nexport interface IGetTv {\r\n  page: number;\r\n  results: ITv[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\ninterface ITv {\r\n  id: number;\r\n  backdrop_path: string;\r\n  overview: string;\r\n  poster_path: string;\r\n  name: string;\r\n  release_date?: string;\r\n}\r\nexport function getTv() {\r\n  return fetch(\r\n    `${BASE_PATH}/tv/airing_today?api_key=${API_KEY}`\r\n  ).then((response) => response.json());\r\n}\r\nexport function getPopularTv() {\r\n  return fetch(\r\n    `${BASE_PATH}/tv/popular?api_key=${API_KEY}&page=4`\r\n  ).then((response) => response.json());\r\n}\r\nexport function getTopRatedTv() {\r\n  return fetch(\r\n    `${BASE_PATH}/tv/top_rated?api_key=${API_KEY}&page=2`\r\n  ).then((response) => response.json());\r\n}\r\n\r\n//detail\r\nexport interface IGetMovieDetail {\r\n  adult: boolean;\r\n  backdrop_path: string;\r\n  genres: IGenres[];\r\n  homepage: string;\r\n  id: number;\r\n  title: string;\r\n  vote_average: number;\r\n  overview: string;\r\n  poster_path: string;\r\n  name: string;\r\n  runtime: number;\r\n  number_of_seasons: number;\r\n}\r\nexport function getMovieDetail(movieId: string) {\r\n  return fetch(\r\n    `${BASE_PATH}/movie/${movieId}?api_key=${API_KEY}`\r\n  ).then((response) => response.json());\r\n}\r\nexport function getTvDetail(tvId: string) {\r\n  return fetch(\r\n    `${BASE_PATH}/tv/${tvId}?api_key=${API_KEY}`\r\n  ).then((response) => response.json());\r\n}","export function makeImagePath(id: string, format?: string) {\r\n    return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\r\n}","export default __webpack_public_path__ + \"static/media/noPoster.ea2ad102.png\";","import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport styled from 'styled-components';\r\nimport { getMovieDetail, getTvDetail, IGetMovieDetail } from '../api';\r\nimport { makeImagePath } from '../utils';\r\nimport noPoster from '../Components/noPoster.png';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n  border-radius: 20px;\r\n  height: 100%;\r\n`;\r\nconst BigImage = styled.div`\r\n  width: 100%;\r\n  height: 500px;\r\n  background-position: center top;\r\n  background-size: cover;\r\n`;\r\nconst Loader = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\nconst BigHeader = styled.div`\r\n  padding: 20px;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  top: -60px;\r\n`;\r\nconst BigTitle = styled.h3`\r\n  font-size: 30px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n`;\r\nconst BigRate = styled.div`\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  color: red;\r\n`;\r\nconst BigOverView = styled.p`\r\n  padding: 20px;\r\n  position: relative;\r\n  top: -80px;\r\n  font-size: 14px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n`;\r\nconst BigRunTime = styled.span`\r\n  margin: 20px;\r\n  padding: 5px 5px;\r\n  position: relative;\r\n  border-radius: 5px;\r\n  font-weight: bold;\r\n  top: -80px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n  background-color: #fbc531;\r\n`;\r\nconst BigGenres = styled.ul`\r\n  display: flex;\r\n  position: relative;\r\n  top: -80px;\r\n  padding: 20px;\r\n`;\r\nconst Genre = styled.li`\r\n  margin-right: 10px;\r\n  background-color: red;\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n  border-radius: 5px;\r\n  padding: 5px 5px;\r\n  transition: all 0.3s linear;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: black;\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nconst BigCompany = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 10px;\r\n  padding: 20px;\r\n  width: 100%;\r\n`;\r\nconst CompanyInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: darkgray;\r\n  border-radius: 10px;\r\n`;\r\nconst CompanyLogo = styled.div<{ bgPhoto: string }>`\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  margin: 5px 0px;\r\n`;\r\nconst CompanyName = styled.span`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  color: white;\r\n`;\r\nconst CompanyTitle = styled.span`\r\n  font-size: 18px;\r\n  color: white;\r\n  border-radius: 5px;\r\n  margin: 0px 20px;\r\n  padding: 5px 5px;\r\n  background-color: #269251;\r\n  font-weight: bold;\r\n`;\r\n\r\ninterface RouteParams {\r\n  movieId: string;\r\n  tvId: string;\r\n}\r\nconst Detail = () => {\r\n  const { movieId, tvId } = useParams() as RouteParams;\r\n\r\n  const { data, isLoading: movieLoading } = useQuery<IGetMovieDetail>(\r\n    ['movieDetail'],\r\n    () => (movieId ? getMovieDetail(movieId) : getTvDetail(tvId)),\r\n    { keepPreviousData: true }\r\n  );\r\n\r\n  const time = data?.runtime;\r\n  const hour = time && Math.floor(time / 60);\r\n  const minutes = time && time % 60;\r\n\r\n  return (\r\n    <>\r\n      {movieLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <Container>\r\n          <Helmet>\r\n            <title>\r\n              {movieId ? (\r\n                data?.title\r\n              ) : movieLoading ? (\r\n                <Loader>Loading...</Loader>\r\n              ) : (\r\n                data?.name\r\n              )}\r\n            </title>\r\n          </Helmet>\r\n          <BigImage\r\n            style={{\r\n              backgroundImage: data?.backdrop_path\r\n                ? `linear-gradient(to top,black, transparent), url(${makeImagePath(\r\n                    data.backdrop_path\r\n                  )})`\r\n                : noPoster,\r\n            }}\r\n          />\r\n          <BigHeader>\r\n            <BigTitle>{movieId ? data?.title : data?.name}</BigTitle>\r\n            <BigRate>{`평점 : ${data && data?.vote_average}`}</BigRate>\r\n          </BigHeader>\r\n          <BigOverView>{data && data?.overview}</BigOverView>\r\n          <BigRunTime>\r\n            {movieId\r\n              ? `${hour}시간 ${minutes}분`\r\n              : `시즌: ${data?.number_of_seasons}`}\r\n          </BigRunTime>\r\n          <BigGenres>\r\n            {data &&\r\n              data?.genres.map((genre) => (\r\n                <Genre key={genre.id}>{genre.name}</Genre>\r\n              ))}\r\n          </BigGenres>\r\n         \r\n          \r\n         \r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport { getMovies, IGetMoviesResult, topMovies, upcomingMovie } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport { useState } from \"react\"\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport noPoster from '../Components/noPoster.png';\r\nimport Detail from '../Components/Detail';\r\n\r\nconst Wrapper = styled.div`\r\n  background: black;\r\n  padding-bottom: 200px;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 60px;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 68px;\r\n  margin-bottom: 20px; ;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 30px;\r\n  width: 50%;\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  position: relative;\r\n  top: -100px;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\n// const Row = styled(motion.div)`\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 200px;\r\n  font-size: 66px;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigMovie = styled(motion.div)`\r\n  position: absolute;\r\n  width: 40vw;\r\n  height: 80vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 46px;\r\n  position: relative;\r\n  top: -80px;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  padding: 20px;\r\n  position: relative;\r\n  top: -80px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst rowVariants = {\r\n  hidden: {\r\n    x: window.outerWidth + 5,\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: {\r\n    x: -window.outerWidth - 5,\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -80,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst ArrowBtn = styled.div`\r\n  width: 50px;\r\n  height: 200px;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  right: 0;\r\n`;\r\n\r\nconst UpcomingSlide = styled.div`\r\n  margin-top: 200px;\r\n  position: relative;\r\n`;\r\nconst TopSlide = styled.div`\r\n  margin-top: 300px;\r\n  position: relative;\r\n`;\r\n\r\nconst SliderTitle = styled.div`\r\n  font-size: 32px;\r\n  font-weight: 600;  \r\n`;\r\n\r\nconst offset = 6; //한페이지에 보이는 개수\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\r\n  // console.log(bigMovieMatch);\r\n  const { scrollY } = useViewportScroll();\r\n  const { data, isLoading: nowLoading} = useQuery<IGetMoviesResult>(\r\n    [\"movies\", \"nowPlaying\"], \r\n    getMovies);\r\n  const { data: topMovieData, isLoading: topMovieLoading,\r\n    } = useQuery<IGetMoviesResult>(['movie', 'topMovie'], topMovies);\r\n  const { data: upcomingData, isLoading: upcomingLoading,\r\n    } = useQuery<IGetMoviesResult>(['movie', 'upcoming'], upcomingMovie);  \r\n  // console.log(data, isLoading);\r\n  const [index, setIndex] = useState(0);\r\n  const [topIndex, setTopIndex] = useState(0);\r\n  const [upIndex, setUpIndex] = useState(0);\r\n  // const incraseIndex = () => setIndex((prev) => prev + 1);\r\n  const [leaving, setLeaving] = useState(false);\r\n  const incraseIndex = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalMovies = data.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const upInCreseIndex = () => {\r\n    if (upcomingData) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalMovies = upcomingData?.results.length - 2;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setUpIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const topIncreseIndex = () => {\r\n    if (topMovieData) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalMovies = topMovieData?.results.length - 2;\r\n\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n  const onBoxClicked = (movieId: number) => {\r\n    history.push(`/movies/${movieId}`);\r\n  };\r\n  const onOverlayClick = () => history.push(\"/\");\r\n  const clickedMovie =\r\n    bigMovieMatch?.params.movieId &&\r\n    data?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId);\r\n\r\n    const isLoading = nowLoading || topMovieLoading || upcomingLoading;\r\nreturn (\r\n  <Wrapper>\r\n      {isLoading ? (<Loader>Loading...</Loader>) : (\r\n      <>\r\n        <Banner\r\n            // onClick={incraseIndex}\r\n            bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}\r\n        >\r\n          <Title>{data?.results[0].title}</Title>\r\n          <Overview>{data?.results[0].overview}</Overview>\r\n        </Banner> \r\n          <Slider>\r\n            <SliderTitle>상영중인 영화</SliderTitle>\r\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n              <Row\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={index}\r\n              >\r\n                {data?.results\r\n                  .slice(1)\r\n                  .slice(offset * index, offset * index + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                    layoutId={movie.id + \"\"}\r\n                      key={movie.id}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      variants={boxVariants}\r\n                      onClick={() => onBoxClicked(movie.id)}\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={\r\n                        movie.backdrop_path\r\n                        ? makeImagePath(movie.backdrop_path, 'w500')\r\n                        : noPoster\r\n                    }\r\n                      >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <ArrowBtn onClick={incraseIndex}>\r\n            💨\r\n            </ArrowBtn>\r\n          </Slider>\r\n{/* 커밍슬라이더 */}\r\n          <UpcomingSlide>\r\n            <SliderTitle>개봉예정 영화</SliderTitle>\r\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n              <Row\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: 'tween', duration: 1 }}\r\n                key={upIndex}\r\n              >\r\n                {upcomingData?.results\r\n                  .slice(2)\r\n                  .slice(offset * upIndex, offset * upIndex + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      layoutId={String(movie.id)}\r\n                      key={movie.id}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      variants={boxVariants}\r\n                      transition={{ type: 'tween' }}\r\n                      onClick={() => onBoxClicked(movie.id)}\r\n                      bgPhoto={\r\n                        movie.backdrop_path\r\n                        ? makeImagePath(movie.backdrop_path, 'w500')\r\n                        : noPoster\r\n                      }\r\n                      // bgPhoto={makeImagePath(\r\n                      //   movie.backdrop_path\r\n                      //     ? movie.backdrop_path\r\n                      //     : ( movie.poster_path ? movie.poster_path : noPoster)\r\n                      //     ,\r\n                      //   \"w500\"\r\n                      // )}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <ArrowBtn onClick={upInCreseIndex}>\r\n            💨\r\n            </ArrowBtn>\r\n          </UpcomingSlide>          \r\n{/* 평점탑영화 */}\r\n<TopSlide>\r\n            <SliderTitle>최고의 영화</SliderTitle>\r\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n              <Row\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: 'tween', duration: 1 }}\r\n                key={topIndex}\r\n              >\r\n                {topMovieData?.results\r\n                  .slice(2)\r\n                  .slice(offset * topIndex, offset * topIndex + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      layoutId={String(movie.id)}\r\n                      key={movie.id}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      variants={boxVariants}\r\n                      transition={{ type: 'tween' }}\r\n                      onClick={() => onBoxClicked(movie.id)}\r\n                      bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <ArrowBtn onClick={topIncreseIndex}>\r\n            💨\r\n            </ArrowBtn>\r\n          </TopSlide>\r\n          <AnimatePresence>\r\n            {bigMovieMatch ? (\r\n              <>\r\n              <Overlay\r\n                onClick={onOverlayClick}\r\n                exit={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n              />\r\n              <BigMovie\r\n                style={{ top: scrollY.get() + 100 }}\r\n                layoutId={bigMovieMatch.params.movieId}\r\n              >\r\n                <Detail />\r\n              </BigMovie>\r\n            </>\r\n            ) : null}\r\n          </AnimatePresence>   \r\n                 \r\n      </>\r\n    )} \r\n  </Wrapper>\r\n  );  \r\n}\r\nexport default Home;","import { useQuery } from 'react-query';\r\nimport { useLocation, useHistory, useRouteMatch } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { ISearchResult, searchAll } from '../api';\r\nimport { makeImagePath } from '../utils';\r\nimport { AnimatePresence, motion, useViewportScroll } from 'framer-motion';\r\nimport Detail from '../Components/Detail';\r\n// import { Helmet } from 'react-helmet';\r\n\r\n//home base\r\nconst Wrapper = styled.div`\r\n  background: black;\r\n  padding-bottom: 200px;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 60px;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 68px;\r\n  margin-bottom: 20px; ;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 30px;\r\n  width: 50%;\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  position: relative;\r\n  top: -100px;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 200px;\r\n  font-size: 66px;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigMovie = styled(motion.div)`\r\n  position: absolute;\r\n  width: 40vw;\r\n  height: 80vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 46px;\r\n  position: relative;\r\n  top: -80px;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  padding: 20px;\r\n  position: relative;\r\n  top: -80px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst rowVariants = {\r\n  hidden: {\r\n    x: window.outerWidth + 5,\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: {\r\n    x: -window.outerWidth - 5,\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -80,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst BoxContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  padding: 60px;\r\n  gap: 10px;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Search() {\r\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\r\n  const history = useHistory();//6버전부터 useNavigate();\r\n  const location = useLocation();\r\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\r\n  // console.log(keyword);\r\n  const movieMatch = useRouteMatch('/search/movies/:movieId');\r\n  const tvMatch = useRouteMatch(`/search/tv/:tvId`);\r\n  const { scrollY } = useViewportScroll();\r\n  const { data, isLoading } = useQuery<ISearchResult>(['search', keyword], () =>\r\n    searchAll(keyword)\r\n  );\r\n  const onBoxClicked = (mediaType: string, searchId: number) => {\r\n    if (mediaType === 'movie') {\r\n      history.push(`/movies/${searchId}`);\r\n    } else if (mediaType === 'tv') {\r\n      history.push(`/tvs/${searchId}`);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onOverlayClick = () => history.push(\"/\");\r\n  const clickedMovie =\r\n    bigMovieMatch?.params.movieId &&\r\n    data?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId);\r\n\r\n  return (\r\n    <Wrapper>\r\n        {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n        \r\n        <BoxContainer>\r\n            {data?.results.map((search) => (\r\n            <AnimatePresence>  \r\n                \r\n              <Box\r\n                    initial=\"normal\"\r\n                    whileHover=\"hover\"\r\n                    variants={boxVariants}\r\n                    key={search.id}\r\n                    onClick={() => onBoxClicked(search.media_type, search.id)}\r\n                    bgPhoto={\r\n                      search.backdrop_path\r\n                        ? makeImagePath(search.backdrop_path, 'w500')\r\n                        : makeImagePath(search.poster_path, 'w500')\r\n                    }\r\n                  >\r\n                    <Info variants={infoVariants}>\r\n                      <h4>{search.title ? search.title : search.name}</h4>\r\n                    </Info>\r\n              </Box>\r\n            \r\n            </AnimatePresence>\r\n            ))}\r\n      </BoxContainer>      \r\n          \r\n      <AnimatePresence>\r\n            {bigMovieMatch ? (\r\n              <>\r\n              <Overlay\r\n                onClick={onOverlayClick}\r\n                exit={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n              />\r\n              <BigMovie\r\n                style={{ top: scrollY.get() + 100 }}\r\n                layoutId={bigMovieMatch.params.movieId}\r\n              >\r\n                <Detail />\r\n              </BigMovie>\r\n            </>\r\n            ) : null}\r\n          </AnimatePresence>      \r\n        \r\n        </>\r\n        )}\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Search;","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport { getPopularTv, getTopRatedTv, getTv, IGetTv } from '../api';\r\nimport { makeImagePath } from \"../utils\";\r\nimport { useState } from \"react\"\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport noPoster from '../Components/noPoster.png';\r\nimport Detail from '../Components/Detail';\r\n\r\nconst Wrapper = styled.div`\r\n  background: black;\r\n  padding-bottom: 200px;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 60px;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 68px;\r\n  margin-bottom: 20px; ;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 30px;\r\n  width: 50%;\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  position: relative;\r\n  top: -100px;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\n// const Row = styled(motion.div)`\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 200px;\r\n  font-size: 66px;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigMovie = styled(motion.div)`\r\n  position: absolute;\r\n  width: 40vw;\r\n  height: 80vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 46px;\r\n  position: relative;\r\n  top: -80px;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  padding: 20px;\r\n  position: relative;\r\n  top: -80px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst rowVariants = {\r\n  hidden: {\r\n    x: window.outerWidth + 5,\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: {\r\n    x: -window.outerWidth - 5,\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -80,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst ArrowBtn = styled.div`\r\n  width: 50px;\r\n  height: 200px;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  right: 0;\r\n`;\r\n\r\nconst UpcomingSlide = styled.div`\r\n  margin-top: 200px;\r\n  position: relative;\r\n`;\r\nconst TopSlide = styled.div`\r\n  margin-top: 300px;\r\n  position: relative;\r\n`;\r\nconst BigGenres = styled.ul`\r\n  display: flex;\r\n  position: relative;\r\n  top: -80px;\r\n  padding: 20px;\r\n`;\r\nconst Genre = styled.li`\r\n  margin-right: 10px;\r\n  background-color: red;\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n  border-radius: 5px;\r\n  padding: 5px 5px;\r\n  transition: all 0.3s linear;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: black;\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nconst SliderTitle = styled.div`\r\n  font-size: 32px;\r\n  font-weight: 600;  \r\n`;\r\n\r\nconst offset = 6; //한페이지에 보이는 개수\r\n\r\nfunction Tv() {\r\n  const history = useHistory();\r\n  const bigMovieMatch = useRouteMatch<{ tvId: string }>('/tvs/:tvId');\r\n  // console.log(bigMovieMatch);\r\n  const { scrollY } = useViewportScroll();\r\n  const { data, isLoading: todayLoading } = useQuery<IGetTv>(\r\n    ['tv', 'today'],\r\n    getTv\r\n  );\r\n  const { data: popTvData, isLoading: popTvLoading } = useQuery<IGetTv>(\r\n    ['tv', 'popular'],\r\n    getPopularTv\r\n  );\r\n  const { data: topTvData, isLoading: topTvLoading } = useQuery<IGetTv>(\r\n    ['tv', 'topRate'],\r\n    getTopRatedTv\r\n  );\r\n  const [todayIndex, setTodayIndex] = useState(0);\r\n  const [popIndex, setPopIndex] = useState(0);\r\n  const [topIndex, setTopIndex] = useState(0);\r\n\r\n  const [leaving, setLeaving] = useState(false);\r\n  const increaseToday = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalTv = data?.results.length - 2;\r\n      const maxIndex = Math.floor(totalTv / offset) - 1;\r\n      setTodayIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const increasePop = () => {\r\n    if (popTvData) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalTv = popTvData?.results.length - 2;\r\n      const maxIndex = Math.floor(totalTv / offset) - 1;\r\n      setPopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const increaseTop = () => {\r\n    if (topTvData) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalTv = topTvData?.results.length - 2;\r\n      const maxIndex = Math.floor(totalTv / offset) - 1;\r\n      setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n  const onBoxClicked = (tvId: number) => {\r\n    history.push(`/tvs/${tvId}`);\r\n  };\r\n  const onOverlayClick = () => history.push(\"/tv\");\r\n  const clickedtv =\r\n    bigMovieMatch?.params.tvId &&\r\n    data?.results.find((tv) => tv.id === +bigMovieMatch.params.tvId);\r\n  const isLoading = todayLoading || popTvLoading || topTvLoading;\r\n  return (\r\n  <Wrapper>\r\n      {isLoading ? (<Loader>Loading...</Loader>) : (\r\n      <>\r\n        <Banner\r\n            // onClick={incraseIndex}\r\n            bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}\r\n        >\r\n          <Title>{data?.results[0].name}</Title>\r\n          <Overview>{data?.results[0].overview}</Overview>\r\n        </Banner> \r\n          <Slider>\r\n            <SliderTitle>상영중인 콘텐츠</SliderTitle>\r\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n              <Row\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={todayIndex}\r\n              >\r\n\r\n                {data?.results\r\n                  .slice(1)\r\n                  .slice(offset * todayIndex, offset * todayIndex + offset)\r\n                  .map((tv) => (\r\n                    <Box\r\n                    layoutId={tv.id + \"\"}\r\n                      key={tv.id}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      variants={boxVariants}\r\n                      onClick={() => onBoxClicked(tv.id)}\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={\r\n                        tv.backdrop_path\r\n                        ? makeImagePath(tv.backdrop_path, 'w500')\r\n                        : noPoster\r\n                    }\r\n                      >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{tv.name}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <ArrowBtn onClick={increaseToday}>\r\n            💨\r\n            </ArrowBtn>\r\n          </Slider>\r\n{/* 커밍슬라이더 */}\r\n          <UpcomingSlide>\r\n            <SliderTitle>인기 콘텐츠</SliderTitle>\r\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n              <Row\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: 'tween', duration: 1 }}\r\n                key={popIndex}\r\n              >\r\n                {popTvData?.results\r\n                  .slice(2)\r\n                  .slice(offset * popIndex, offset * popIndex + offset)\r\n                  .map((tv) => (\r\n                    <Box\r\n                      layoutId={String(tv.id)}\r\n                      key={tv.id}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      variants={boxVariants}\r\n                      transition={{ type: 'tween' }}\r\n                      onClick={() => onBoxClicked(tv.id)}\r\n                      bgPhoto={\r\n                        tv.backdrop_path\r\n                        ? makeImagePath(tv.backdrop_path, 'w500')\r\n                        : noPoster\r\n                      }\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{tv.name}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <ArrowBtn onClick={increasePop}>\r\n            💨\r\n            </ArrowBtn>\r\n          </UpcomingSlide>          \r\n{/* 평점탑영화 */}\r\n<TopSlide>\r\n            <SliderTitle>최고의 콘텐츠</SliderTitle>\r\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n              <Row\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: 'tween', duration: 1 }}\r\n                key={topIndex}\r\n              >\r\n                {topTvData?.results\r\n                  .slice(2)\r\n                  .slice(offset * topIndex, offset * topIndex + offset)\r\n                  .map((tv) => (\r\n                    <Box\r\n                      layoutId={String(tv.id)}\r\n                      key={tv.id}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      variants={boxVariants}\r\n                      transition={{ type: 'tween' }}\r\n                      onClick={() => onBoxClicked(tv.id)}\r\n                      bgPhoto={makeImagePath(tv.backdrop_path, 'w500')}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{tv.name}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            <ArrowBtn onClick={increaseTop}>\r\n            💨\r\n            </ArrowBtn>\r\n          </TopSlide>\r\n          <AnimatePresence>\r\n            {bigMovieMatch ? (\r\n              <>\r\n              <Overlay\r\n                onClick={onOverlayClick}\r\n                exit={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n              />\r\n              <BigMovie\r\n                style={{ top: scrollY.get() + 100 }}\r\n                layoutId={bigMovieMatch.params.tvId}\r\n              >\r\n                <Detail />\r\n              </BigMovie>\r\n            </>\r\n            ) : null}\r\n          </AnimatePresence>          \r\n      </>\r\n    )} \r\n  </Wrapper>\r\n  );  \r\n}\r\nexport default Tv;","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport Home from \"./Routes/Home\";\r\nimport Search from \"./Routes/Search\";\r\nimport Tv from \"./Routes/Tv\";\r\nimport Detail from \"./Components/Detail\"\r\n\r\nfunction App() {\r\n  return (\r\n\t<Router>\r\n\t\t<Header />\r\n\t\t<Switch>\r\n\t\t\t<Route exact path=\"/tv\">\r\n\t\t\t\t<Tv />\r\n\t\t\t</Route>\r\n\t\t\t<Route path=\"/search\">\r\n\t\t\t\t<Search />\r\n\t\t\t</Route>\r\n\t\t\t{/* 모든 경로가 /로 반환되는 것을 방지 : 아래로 이동 */}\r\n\t\t\t{/* <Route path={[\"/\", \"/movies/:movieId\"]}>\r\n\t\t\t\t<Home />\r\n\t\t\t</Route> */}\r\n\t\t\t<Route path={[\"/movies/:movieId\", \"/tvs/:tvId\"]}>\r\n\t\t\t\t<Detail />\r\n\t\t\t</Route>\r\n\r\n\t\t\t<Route path=\"/\">\r\n\t\t\t\t<Home />\r\n\t\t\t</Route>\r\n\t\t\t{/* <Route path=\"/\" component={() => <Home />}>\r\n        \t</Route>\r\n\t\t\t<Route path=\"/movies/:movieId\" component={() => <Detail />} /> */}\r\n\t\t</Switch>\r\n\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\n\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { theme } from \"./theme\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  color:${(props) => props.theme.white.darker};\r\n  line-height: 1.2;\r\n  background-color: black;\r\n}\r\n\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n`;\r\n\r\nconst client = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={client}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalStyle />\r\n          <App />\r\n        </ThemeProvider>\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  red: \"#E51013\",\r\n  black: {\r\n    veryDark: \"#141414\",\r\n    darker: \"#181818\",\r\n    lighter: \"#2F2F2F\",\r\n  },\r\n  white: {\r\n    lighter: \"#fff\",\r\n    darker: \"#e5e5e5\",\r\n  },\r\n};"],"sourceRoot":""}